<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>